<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>